<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>